<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>